<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>